<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>